<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>